<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>